<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>